<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>